<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>